<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>